<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>